<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>